<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>